<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>